<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>